<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>